<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>